<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>